<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>